<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>